<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>